<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>